<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>